<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>